<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>